<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>